<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>